<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>